<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>